<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>